<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>